<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>